<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>